<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>